<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>